<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>